<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>